<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>